<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>